<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>